<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>